<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>